<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>